<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>